<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>